<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>